<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>